<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>